<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>